<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>